<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>